<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>